<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>